<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>